<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>